<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>